<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>